<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>